<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>